<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>